<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>